<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>